<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>